<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>